<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>